<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>